<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>